<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>